<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>